<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>